<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>